<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>